<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>